<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>